<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>